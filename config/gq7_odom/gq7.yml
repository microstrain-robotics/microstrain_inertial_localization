# This can be set by passing an arg to the launch file
port     : $(arg port)
baudrate : $(arg baudrate)

# Disable the transform from the mount to frame id transform as it should be handled from a URDF file and robot_description
publish_mount_to_frame_id_transform : False

# This will cause the node to convert any NED measurements to ENU
# This will also cause the node to convert any vehicle frame measurements to the ROS definition of a vehicle frame
use_enu_frame : True

# Configure some frame IDs
frame_id          : $(arg frame_id)            # Frame ID of all of the filter messages. Represents the location of the GQ& in the tf tree
map_frame_id      : "map"                      # Frame ID of the local tangent plane.
earth_frame_id    : "earth"                    # Frame ID of the global frame
gnss1_frame_id    : $(arg gnss1_frame_id)      # Frame ID of GNSS antenna 1. This represents GNSS antenna 1 of the GQ7 in the tf tree
gnss2_frame_id    : $(arg gnss2_frame_id)      # Frame ID of GNSS antenna 2. This represents GNSS antenna 2 of the GQ7 in the tf tree
odometer_frame_id : "gq7_odometer_link"        # Frame ID of the GQ7 odometer
target_frame_id   : "odom"                     # Frame ID that we will publish a transform to.

# We will use relative transform mode, meaning that we will publish the following transforms from this node
#   earth_frame_id -> map_frame_id
#   map_frame_id -> target_frame_id
# This helps ROS standard tools consume and display position information produced by the device.
# This also allows something like robot_localization to sit alongside this node.
tf_mode: 2

# Enable the RTK dongle interface for communication with the 3DM-RTK.
# Note: Even if you do not have a 3DM-RTK connected to the aux port, this boolean can remain true
rtk_dongle_enable : True

# If this is enabled, this will connect to the aux port of the GQ7 and listen for RTCM from ROS
ntrip_interface_enable : $(arg ntrip)
aux_port               : $(arg aux_port)
aux_baudrate           : $(arg aux_baudrate)

# We will use base station relative position configuration for this example. This configuration does a couple things:
#   We will setup a local tangent plane at the location of the RTK base station being used by the GQ7.
#   We will publish this location as the transform from the earth_frame_id to map_frame_id frame
# Note: This configuration requires a 3DM-RTK to be connected to the aux port of the GQ7.
#       If you do not have that device, see https://wiki.ros.org/microstrain_inertial_driver/relative_position_configuration for more options.
filter_relative_position_config : True
filter_relative_position_source : 0

# Set the antenna offsets.
# Note that this will cause the driver to lookup the transform between the GQ7 and the antennas in the transform tree.
# If you have a setup where you can lookup the transforms, you do not need to change anything. Otherwise, these can be configured manually
gnss1_antenna_offset_source : 2
gnss2_antenna_offset_source : 2

# This will set the heading alignment to be dual antenna.
filter_auto_heading_alignment_selector : 1

# Static IMU message covariance values (the device does not generate these) 
imu_orientation_cov   : [0.01, 0, 0, 0, 0.01, 0, 0, 0, 0.01]
imu_linear_cov        : [0.01, 0, 0, 0, 0.01, 0, 0, 0, 0.01]
imu_angular_cov       : [0.01, 0, 0, 0, 0.01, 0, 0, 0, 0.01]
imu_mag_cov           : [0.01, 0, 0, 0, 0.01, 0, 0, 0, 0.01]
imu_pressure_variance : 0.01

# This will contain the raw IMU data, NOT the filtered IMU data. This is useful for tools like robot_localization
imu_data_rate : 100

# For this use case, we will not publish any raw GNSS information
gnss1_llh_position_data_rate   : 0
gnss1_velocity_data_rate       : 0
gnss1_odometry_earth_data_rate : 0
gnss2_llh_position_data_rate   : 0
gnss2_velocity_data_rate       : 0
gnss2_odometry_earth_data_rate : 0

# We will only publish the map odometry message from the filter in this example.
# Also publish the human readable message which can be echoed from the command line
filter_human_readable_status_data_rate : 1
filter_odometry_earth_data_rate        : 0
filter_odometry_map_data_rate          : 50
